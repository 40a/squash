// Squash by Solo.io

// This file was automatically generated by lister-gen

package v1

import (
	v1 "github.com/solo-io/squash/pkg/platforms/kubernetes/crd/apis/squash/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DebugAttachmentLister helps list DebugAttachments.
type DebugAttachmentLister interface {
	// List lists all DebugAttachments in the indexer.
	List(selector labels.Selector) (ret []*v1.DebugAttachment, err error)
	// DebugAttachments returns an object that can list and get DebugAttachments.
	DebugAttachments(namespace string) DebugAttachmentNamespaceLister
	DebugAttachmentListerExpansion
}

// debugAttachmentLister implements the DebugAttachmentLister interface.
type debugAttachmentLister struct {
	indexer cache.Indexer
}

// NewDebugAttachmentLister returns a new DebugAttachmentLister.
func NewDebugAttachmentLister(indexer cache.Indexer) DebugAttachmentLister {
	return &debugAttachmentLister{indexer: indexer}
}

// List lists all DebugAttachments in the indexer.
func (s *debugAttachmentLister) List(selector labels.Selector) (ret []*v1.DebugAttachment, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DebugAttachment))
	})
	return ret, err
}

// DebugAttachments returns an object that can list and get DebugAttachments.
func (s *debugAttachmentLister) DebugAttachments(namespace string) DebugAttachmentNamespaceLister {
	return debugAttachmentNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DebugAttachmentNamespaceLister helps list and get DebugAttachments.
type DebugAttachmentNamespaceLister interface {
	// List lists all DebugAttachments in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.DebugAttachment, err error)
	// Get retrieves the DebugAttachment from the indexer for a given namespace and name.
	Get(name string) (*v1.DebugAttachment, error)
	DebugAttachmentNamespaceListerExpansion
}

// debugAttachmentNamespaceLister implements the DebugAttachmentNamespaceLister
// interface.
type debugAttachmentNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DebugAttachments in the indexer for a given namespace.
func (s debugAttachmentNamespaceLister) List(selector labels.Selector) (ret []*v1.DebugAttachment, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DebugAttachment))
	})
	return ret, err
}

// Get retrieves the DebugAttachment from the indexer for a given namespace and name.
func (s debugAttachmentNamespaceLister) Get(name string) (*v1.DebugAttachment, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("debugattachment"), name)
	}
	return obj.(*v1.DebugAttachment), nil
}
