// Squash by Solo.io

// This file was automatically generated by lister-gen

package v1

import (
	v1 "github.com/solo-io/squash/pkg/platforms/kubernetes/crd/apis/squash/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DebugRequestLister helps list DebugRequests.
type DebugRequestLister interface {
	// List lists all DebugRequests in the indexer.
	List(selector labels.Selector) (ret []*v1.DebugRequest, err error)
	// DebugRequests returns an object that can list and get DebugRequests.
	DebugRequests(namespace string) DebugRequestNamespaceLister
	DebugRequestListerExpansion
}

// debugRequestLister implements the DebugRequestLister interface.
type debugRequestLister struct {
	indexer cache.Indexer
}

// NewDebugRequestLister returns a new DebugRequestLister.
func NewDebugRequestLister(indexer cache.Indexer) DebugRequestLister {
	return &debugRequestLister{indexer: indexer}
}

// List lists all DebugRequests in the indexer.
func (s *debugRequestLister) List(selector labels.Selector) (ret []*v1.DebugRequest, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DebugRequest))
	})
	return ret, err
}

// DebugRequests returns an object that can list and get DebugRequests.
func (s *debugRequestLister) DebugRequests(namespace string) DebugRequestNamespaceLister {
	return debugRequestNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DebugRequestNamespaceLister helps list and get DebugRequests.
type DebugRequestNamespaceLister interface {
	// List lists all DebugRequests in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.DebugRequest, err error)
	// Get retrieves the DebugRequest from the indexer for a given namespace and name.
	Get(name string) (*v1.DebugRequest, error)
	DebugRequestNamespaceListerExpansion
}

// debugRequestNamespaceLister implements the DebugRequestNamespaceLister
// interface.
type debugRequestNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DebugRequests in the indexer for a given namespace.
func (s debugRequestNamespaceLister) List(selector labels.Selector) (ret []*v1.DebugRequest, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DebugRequest))
	})
	return ret, err
}

// Get retrieves the DebugRequest from the indexer for a given namespace and name.
func (s debugRequestNamespaceLister) Get(name string) (*v1.DebugRequest, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("debugrequest"), name)
	}
	return obj.(*v1.DebugRequest), nil
}
