package debugsessions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/solo-io/squash/pkg/models"
)

// PutDebugSessionCreatedCode is the HTTP code returned for type PutDebugSessionCreated
const PutDebugSessionCreatedCode int = 201

/*PutDebugSessionCreated Debug session created

swagger:response putDebugSessionCreated
*/
type PutDebugSessionCreated struct {

	/*
	  In: Body
	*/
	Payload *models.DebugSession `json:"body,omitempty"`
}

// NewPutDebugSessionCreated creates PutDebugSessionCreated with default headers values
func NewPutDebugSessionCreated() *PutDebugSessionCreated {
	return &PutDebugSessionCreated{}
}

// WithPayload adds the payload to the put debug session created response
func (o *PutDebugSessionCreated) WithPayload(payload *models.DebugSession) *PutDebugSessionCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put debug session created response
func (o *PutDebugSessionCreated) SetPayload(payload *models.DebugSession) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutDebugSessionCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutDebugSessionBadRequestCode is the HTTP code returned for type PutDebugSessionBadRequest
const PutDebugSessionBadRequestCode int = 400

/*PutDebugSessionBadRequest Invalid ID supplied

swagger:response putDebugSessionBadRequest
*/
type PutDebugSessionBadRequest struct {
}

// NewPutDebugSessionBadRequest creates PutDebugSessionBadRequest with default headers values
func NewPutDebugSessionBadRequest() *PutDebugSessionBadRequest {
	return &PutDebugSessionBadRequest{}
}

// WriteResponse to the client
func (o *PutDebugSessionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
}

// PutDebugSessionNotFoundCode is the HTTP code returned for type PutDebugSessionNotFound
const PutDebugSessionNotFoundCode int = 404

/*PutDebugSessionNotFound debug config not found

swagger:response putDebugSessionNotFound
*/
type PutDebugSessionNotFound struct {
}

// NewPutDebugSessionNotFound creates PutDebugSessionNotFound with default headers values
func NewPutDebugSessionNotFound() *PutDebugSessionNotFound {
	return &PutDebugSessionNotFound{}
}

// WriteResponse to the client
func (o *PutDebugSessionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(404)
}

// PutDebugSessionPreconditionFailedCode is the HTTP code returned for type PutDebugSessionPreconditionFailed
const PutDebugSessionPreconditionFailedCode int = 412

/*PutDebugSessionPreconditionFailed Debug state currently exists

swagger:response putDebugSessionPreconditionFailed
*/
type PutDebugSessionPreconditionFailed struct {
}

// NewPutDebugSessionPreconditionFailed creates PutDebugSessionPreconditionFailed with default headers values
func NewPutDebugSessionPreconditionFailed() *PutDebugSessionPreconditionFailed {
	return &PutDebugSessionPreconditionFailed{}
}

// WriteResponse to the client
func (o *PutDebugSessionPreconditionFailed) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(412)
}

// PutDebugSessionUnprocessableEntityCode is the HTTP code returned for type PutDebugSessionUnprocessableEntity
const PutDebugSessionUnprocessableEntityCode int = 422

/*PutDebugSessionUnprocessableEntity Invalid input

swagger:response putDebugSessionUnprocessableEntity
*/
type PutDebugSessionUnprocessableEntity struct {
}

// NewPutDebugSessionUnprocessableEntity creates PutDebugSessionUnprocessableEntity with default headers values
func NewPutDebugSessionUnprocessableEntity() *PutDebugSessionUnprocessableEntity {
	return &PutDebugSessionUnprocessableEntity{}
}

// WriteResponse to the client
func (o *PutDebugSessionUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(422)
}
