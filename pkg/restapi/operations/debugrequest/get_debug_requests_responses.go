// Code generated by go-swagger; DO NOT EDIT.

package debugrequest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/solo-io/squash/pkg/models"
)

// GetDebugRequestsOKCode is the HTTP code returned for type GetDebugRequestsOK
const GetDebugRequestsOKCode int = 200

/*GetDebugRequestsOK OK

swagger:response getDebugRequestsOK
*/
type GetDebugRequestsOK struct {

	/*
	  In: Body
	*/
	Payload models.GetDebugRequestsOKBody `json:"body,omitempty"`
}

// NewGetDebugRequestsOK creates GetDebugRequestsOK with default headers values
func NewGetDebugRequestsOK() *GetDebugRequestsOK {
	return &GetDebugRequestsOK{}
}

// WithPayload adds the payload to the get debug requests o k response
func (o *GetDebugRequestsOK) WithPayload(payload models.GetDebugRequestsOKBody) *GetDebugRequestsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get debug requests o k response
func (o *GetDebugRequestsOK) SetPayload(payload models.GetDebugRequestsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDebugRequestsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetDebugRequestsOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetDebugRequestsUnprocessableEntityCode is the HTTP code returned for type GetDebugRequestsUnprocessableEntity
const GetDebugRequestsUnprocessableEntityCode int = 422

/*GetDebugRequestsUnprocessableEntity Validation exception

swagger:response getDebugRequestsUnprocessableEntity
*/
type GetDebugRequestsUnprocessableEntity struct {
}

// NewGetDebugRequestsUnprocessableEntity creates GetDebugRequestsUnprocessableEntity with default headers values
func NewGetDebugRequestsUnprocessableEntity() *GetDebugRequestsUnprocessableEntity {
	return &GetDebugRequestsUnprocessableEntity{}
}

// WriteResponse to the client
func (o *GetDebugRequestsUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(422)
}
