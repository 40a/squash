// Code generated by go-swagger; DO NOT EDIT.

package debugattachment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/solo-io/squash/pkg/models"
)

// GetDebugAttachmentsOKCode is the HTTP code returned for type GetDebugAttachmentsOK
const GetDebugAttachmentsOKCode int = 200

/*GetDebugAttachmentsOK OK

swagger:response getDebugAttachmentsOK
*/
type GetDebugAttachmentsOK struct {
	/*When querying for all the sessions on the node this can be used for to wait for a version update.
	  Required: true
	*/
	ETag string `json:"ETag"`

	/*
	  In: Body
	*/
	Payload models.GetDebugAttachmentsOKBody `json:"body,omitempty"`
}

// NewGetDebugAttachmentsOK creates GetDebugAttachmentsOK with default headers values
func NewGetDebugAttachmentsOK() *GetDebugAttachmentsOK {
	return &GetDebugAttachmentsOK{}
}

// WithETag adds the eTag to the get debug attachments o k response
func (o *GetDebugAttachmentsOK) WithETag(eTag string) *GetDebugAttachmentsOK {
	o.ETag = eTag
	return o
}

// SetETag sets the eTag to the get debug attachments o k response
func (o *GetDebugAttachmentsOK) SetETag(eTag string) {
	o.ETag = eTag
}

// WithPayload adds the payload to the get debug attachments o k response
func (o *GetDebugAttachmentsOK) WithPayload(payload models.GetDebugAttachmentsOKBody) *GetDebugAttachmentsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get debug attachments o k response
func (o *GetDebugAttachmentsOK) SetPayload(payload models.GetDebugAttachmentsOKBody) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDebugAttachmentsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header ETag

	eTag := o.ETag
	if eTag != "" {
		rw.Header().Set("ETag", eTag)
	}

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		payload = make(models.GetDebugAttachmentsOKBody, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}

}

// GetDebugAttachmentsRequestTimeoutCode is the HTTP code returned for type GetDebugAttachmentsRequestTimeout
const GetDebugAttachmentsRequestTimeoutCode int = 408

/*GetDebugAttachmentsRequestTimeout Request timed out

swagger:response getDebugAttachmentsRequestTimeout
*/
type GetDebugAttachmentsRequestTimeout struct {
}

// NewGetDebugAttachmentsRequestTimeout creates GetDebugAttachmentsRequestTimeout with default headers values
func NewGetDebugAttachmentsRequestTimeout() *GetDebugAttachmentsRequestTimeout {
	return &GetDebugAttachmentsRequestTimeout{}
}

// WriteResponse to the client
func (o *GetDebugAttachmentsRequestTimeout) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(408)
}

// GetDebugAttachmentsUnprocessableEntityCode is the HTTP code returned for type GetDebugAttachmentsUnprocessableEntity
const GetDebugAttachmentsUnprocessableEntityCode int = 422

/*GetDebugAttachmentsUnprocessableEntity Validation exception

swagger:response getDebugAttachmentsUnprocessableEntity
*/
type GetDebugAttachmentsUnprocessableEntity struct {
}

// NewGetDebugAttachmentsUnprocessableEntity creates GetDebugAttachmentsUnprocessableEntity with default headers values
func NewGetDebugAttachmentsUnprocessableEntity() *GetDebugAttachmentsUnprocessableEntity {
	return &GetDebugAttachmentsUnprocessableEntity{}
}

// WriteResponse to the client
func (o *GetDebugAttachmentsUnprocessableEntity) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(422)
}
