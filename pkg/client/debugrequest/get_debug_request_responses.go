// Code generated by go-swagger; DO NOT EDIT.

package debugrequest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/solo-io/squash/pkg/models"
)

// GetDebugRequestReader is a Reader for the GetDebugRequest structure.
type GetDebugRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetDebugRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetDebugRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 404:
		result := NewGetDebugRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetDebugRequestOK creates a GetDebugRequestOK with default headers values
func NewGetDebugRequestOK() *GetDebugRequestOK {
	return &GetDebugRequestOK{}
}

/*GetDebugRequestOK handles this case with default header values.

OK
*/
type GetDebugRequestOK struct {
	Payload *models.DebugRequest
}

func (o *GetDebugRequestOK) Error() string {
	return fmt.Sprintf("[GET /debugrequest/{debugRequestId}][%d] getDebugRequestOK  %+v", 200, o.Payload)
}

func (o *GetDebugRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.DebugRequest)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetDebugRequestNotFound creates a GetDebugRequestNotFound with default headers values
func NewGetDebugRequestNotFound() *GetDebugRequestNotFound {
	return &GetDebugRequestNotFound{}
}

/*GetDebugRequestNotFound handles this case with default header values.

Not found
*/
type GetDebugRequestNotFound struct {
}

func (o *GetDebugRequestNotFound) Error() string {
	return fmt.Sprintf("[GET /debugrequest/{debugRequestId}][%d] getDebugRequestNotFound ", 404)
}

func (o *GetDebugRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
