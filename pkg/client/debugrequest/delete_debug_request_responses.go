// Code generated by go-swagger; DO NOT EDIT.

package debugrequest

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteDebugRequestReader is a Reader for the DeleteDebugRequest structure.
type DeleteDebugRequestReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDebugRequestReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteDebugRequestOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteDebugRequestBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteDebugRequestNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewDeleteDebugRequestUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDebugRequestOK creates a DeleteDebugRequestOK with default headers values
func NewDeleteDebugRequestOK() *DeleteDebugRequestOK {
	return &DeleteDebugRequestOK{}
}

/*DeleteDebugRequestOK handles this case with default header values.

OK
*/
type DeleteDebugRequestOK struct {
}

func (o *DeleteDebugRequestOK) Error() string {
	return fmt.Sprintf("[DELETE /debugrequest/{debugRequestId}][%d] deleteDebugRequestOK ", 200)
}

func (o *DeleteDebugRequestOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDebugRequestBadRequest creates a DeleteDebugRequestBadRequest with default headers values
func NewDeleteDebugRequestBadRequest() *DeleteDebugRequestBadRequest {
	return &DeleteDebugRequestBadRequest{}
}

/*DeleteDebugRequestBadRequest handles this case with default header values.

Invalid ID supplied
*/
type DeleteDebugRequestBadRequest struct {
}

func (o *DeleteDebugRequestBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /debugrequest/{debugRequestId}][%d] deleteDebugRequestBadRequest ", 400)
}

func (o *DeleteDebugRequestBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDebugRequestNotFound creates a DeleteDebugRequestNotFound with default headers values
func NewDeleteDebugRequestNotFound() *DeleteDebugRequestNotFound {
	return &DeleteDebugRequestNotFound{}
}

/*DeleteDebugRequestNotFound handles this case with default header values.

Debug request not found
*/
type DeleteDebugRequestNotFound struct {
}

func (o *DeleteDebugRequestNotFound) Error() string {
	return fmt.Sprintf("[DELETE /debugrequest/{debugRequestId}][%d] deleteDebugRequestNotFound ", 404)
}

func (o *DeleteDebugRequestNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDebugRequestUnprocessableEntity creates a DeleteDebugRequestUnprocessableEntity with default headers values
func NewDeleteDebugRequestUnprocessableEntity() *DeleteDebugRequestUnprocessableEntity {
	return &DeleteDebugRequestUnprocessableEntity{}
}

/*DeleteDebugRequestUnprocessableEntity handles this case with default header values.

Validation exception
*/
type DeleteDebugRequestUnprocessableEntity struct {
}

func (o *DeleteDebugRequestUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /debugrequest/{debugRequestId}][%d] deleteDebugRequestUnprocessableEntity ", 422)
}

func (o *DeleteDebugRequestUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
