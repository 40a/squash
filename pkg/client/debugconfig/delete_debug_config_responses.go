package debugconfig

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteDebugConfigReader is a Reader for the DeleteDebugConfig structure.
type DeleteDebugConfigReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDebugConfigReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteDebugConfigOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteDebugConfigBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteDebugConfigNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewDeleteDebugConfigUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteDebugConfigOK creates a DeleteDebugConfigOK with default headers values
func NewDeleteDebugConfigOK() *DeleteDebugConfigOK {
	return &DeleteDebugConfigOK{}
}

/*DeleteDebugConfigOK handles this case with default header values.

OK
*/
type DeleteDebugConfigOK struct {
}

func (o *DeleteDebugConfigOK) Error() string {
	return fmt.Sprintf("[DELETE /debugconfig/{debugConfigId}][%d] deleteDebugConfigOK ", 200)
}

func (o *DeleteDebugConfigOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDebugConfigBadRequest creates a DeleteDebugConfigBadRequest with default headers values
func NewDeleteDebugConfigBadRequest() *DeleteDebugConfigBadRequest {
	return &DeleteDebugConfigBadRequest{}
}

/*DeleteDebugConfigBadRequest handles this case with default header values.

Invalid ID supplied
*/
type DeleteDebugConfigBadRequest struct {
}

func (o *DeleteDebugConfigBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /debugconfig/{debugConfigId}][%d] deleteDebugConfigBadRequest ", 400)
}

func (o *DeleteDebugConfigBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDebugConfigNotFound creates a DeleteDebugConfigNotFound with default headers values
func NewDeleteDebugConfigNotFound() *DeleteDebugConfigNotFound {
	return &DeleteDebugConfigNotFound{}
}

/*DeleteDebugConfigNotFound handles this case with default header values.

Debug config not found
*/
type DeleteDebugConfigNotFound struct {
}

func (o *DeleteDebugConfigNotFound) Error() string {
	return fmt.Sprintf("[DELETE /debugconfig/{debugConfigId}][%d] deleteDebugConfigNotFound ", 404)
}

func (o *DeleteDebugConfigNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteDebugConfigUnprocessableEntity creates a DeleteDebugConfigUnprocessableEntity with default headers values
func NewDeleteDebugConfigUnprocessableEntity() *DeleteDebugConfigUnprocessableEntity {
	return &DeleteDebugConfigUnprocessableEntity{}
}

/*DeleteDebugConfigUnprocessableEntity handles this case with default header values.

Validation exception
*/
type DeleteDebugConfigUnprocessableEntity struct {
}

func (o *DeleteDebugConfigUnprocessableEntity) Error() string {
	return fmt.Sprintf("[DELETE /debugconfig/{debugConfigId}][%d] deleteDebugConfigUnprocessableEntity ", 422)
}

func (o *DeleteDebugConfigUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
